const database = "2ND_ASSIGNMENT";

// // Create a new database.
use(database);

// // Create new collections.
// db.createCollection('books');
// db.createCollection('categories');
// db.createCollection('orders');
// db.createCollection('customers');

// Schema validators:
//CUSTOMER
db.runCommand({
	collMod: "customers",
	validator: {
		$jsonSchema: {
			required: ["name", "address"],
			properties: {
				name: {
					bsonType: "string"
				},
				address: {
					bsonType: "string"
				}
			}
		}
	}
});

//ORDERS
db.runCommand({
	collMod: "orders",
	validator: {
		$jsonSchema: {
			required: ["customer_id", "books", "total_price", "date"],
			properties: {
				customer_id: {
					bsonType: "string"
				},
				books: {
					bsonType: "array"
				},
				total_price: {
					bsonType: "double"
				},
				date: {
					bsonType: "date"
				}
			}
		}
	}
});

//BOOKS
db.runCommand({
	collMod: "books",
	validator: {
		$jsonSchema: {
			required: [
				"title",
				"price",
				"quantity",
				"pages",
				"isbn",
				"authors",
				"genres",
				"characters",
				"categories"
			],
			properties: {
				title: {
					bsonType: "string"
				},
				price: {
					bsonType: "double"
				},
				quantity: {
					bsonType: "int"
				},
				pages: {
					bsonType: "int"
				},
				isbn: {
					bsonType: "string"
				},
				authors: {
					bsonType: "array"
				},
				genres: {
					bsonType: "array"
				},
				characters: {
					bsonType: "array"
				},
				categories: {
					bsonType: "array"
				}
			}
		}
	}
});

//CATEGORIES
db.runCommand({
	collMod: "categories",
	validator: {
		$jsonSchema: {
			required: ["name", "sub_categories", "parent_categories"],
			properties: {
				name: {
					bsonType: "string",
					description: "must be a string and is required"
				},
				sub_categories: {
					bsonType: "array",
					items: {
						bsonType: "string"
					}
				},
				parent_categories: {
					bsonType: "array"
				}
			}
		}
	}
});
